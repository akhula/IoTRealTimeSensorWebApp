
@{
    ViewBag.Title = "Index";
}

<div class="jumbotron">
    <center>
        <img class="img-responsive" src="~/Content/images/Tempsense-logo.png" alt="Alternate Text" />
    </center>
    <div id="temperatura">
    </div>
    <div class="modal fade" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document" style="position: initial;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Reporte Dispositivo</h4>
                </div>
                <div class="modal-body">
                    <canvas id="graficaMedidas" width="600" height="400"></canvas>
                    <div id="contenedorPreloadGrafico">
                        <center> <img src="~/Content/images/8.gif" /> </center>
                    </div>
                    <center id="contentMensajeGrafica"></center>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</div>
<div class="col-sm-11">

    <div class="row">
        <div class="col-md-4">
            <div class="media media-middle">
                <div class="media-left">
                    <div style="background-color: #007D21;width: 34px;height: 34px;">  </div>

                </div>
                <div class="media-body">
                    <h4 class="media-heading">Verde</h4>
                    <p>Estable.</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="media media-middle">
                <div class="media-left">
                    <div style="background-color: #FCEF00; width: 34px;height: 34px;">  </div>

                </div>
                <div class="media-body">
                    <h4 class="media-heading">Amarillo</h4>
                    <p>Tolerancia.</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="media media-middle">
                <div class="media-left">
                    <div style="background-color: #E81F00;width: 34px;height: 34px;">  </div>

                </div>
                <div class="media-body">
                    <h4 class="media-heading">Rojo</h4>
                    <p>Alerta.</p>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="container price-item">

    <div class="col-sm-12">
        <div id="content">
        </div>
    </div>

</div>

<div><input type="hidden" value="@ViewBag.UsK" id="usery" /></div>
<br>
<br>
<div id="ContenedorPreload">
    <i class="fa fa-cog fa-spin fa-5x fa-fw"></i>
    <span class="sr-only">Loading...</span>
</div>
<br>

<script>

        $().ready(function () {
            $(function () {

                $("#ContenedorPreload").show();
                $("#content").hide();
                //Create the Hub
                var temperatureHub = $.connection.temperatureHub;

                //Call InitChartData
                $.connection.hub.start().done(function () {
                    temperatureHub.server.initTempData($('#usery').val());
                });

                temperatureHub.client.updateTemperature = function (tempUpdate) {
                    UpdateTemperature(tempUpdate);
                };
            });
        });
</script>
<script type="text/javascript">

        var mensajesWarningTotal = '';
        var MENSAJE_SIN_UMBRAL = "El sensor no tiene un umbral definido.";
        var WIDTH_CHANGE_TOASTR = "600";
        var MENSAJE_SIN_MEDIDAS = 'No se han encontrado medidas de las últimas 24 horas.';
        var TITULO_POPPUP = " Reporte de dispositivo # últimas 24 horas.";
        //funcion que es callback de helper
        function UpdateTemperature(data) {

            mensajesWarningTotal = '';
            $('#content').html('');
            $.each(data, function (index, value) {
                $.each(value, function (indextemp, valuetemp) {
                    $('#content').append(construirContenedorDispositivo(valuetemp.DispositivoId, valuetemp.Empresa, valuetemp.NombreDispositivo, valuetemp.Temperature, valuetemp.Min, valuetemp.Max, valuetemp.MinTolerancia, valuetemp.MaxTolerancia, valuetemp.TipoMedida));
                   $('.verGrafica').click(function () {
                       ObtenerMedidasPorDispositivo($(this).data('id'), $(this).data('nombre'));
                   });
                })
            });

            if (mensajesWarningTotal != '') {
                toastr['error'](mensajesWarningTotal);
            }

            if (data != null) {
                $("#content").show();
            } else {
                Command: toastr["error"]("No se han encontrado datos por favor intentelo de nuevo", 'ERROR');
            }
            $("#ContenedorPreload").hide();
        }

        //funcion que se encarga de crear los objetos visuales de dispositivos
        function construirContenedorDispositivo(idDispositivo, empresa, dispositivo, temperatura, tempMin, tempMax, tolMin, tolMax, tipoMedida) {

            var contenedorColumna = null;
            var content = null;
            var contentRow = null;
            var contentBody = null;
            var styleWarnigUmbral = '';
            var btnumbral = '';
            var mensajeAlerta = null;
            var stylehead = "background: #007D21;";
            var stylebody = "background: #007D21;";
            var newbtnumb = null;
            var TipoM = null;
            if (tempMin == 0 && tempMax == 0) {
                btnumbral = '<a id="btnumbral" style="background-color: #860a0a;" class="btn btn-danger" data-toggle="tooltip" data-placement="rigth" title="' + MENSAJE_SIN_UMBRAL + '" onMouseOver="mensaje()" onClick="mensaje()"><i class="lnr lnr-warning"></i></a>';
            } else {

                if (temperatura >= tolMax || temperatura <= tolMin) {
                    mensajeAlerta = (temperatura <= tolMin) ? ": esta en temperatura muy baja" : ": esta en temperatura muy alta";
                    mostrarMensajeEmergente("error", dispositivo, mensajeAlerta);
                    styleWarnigUmbral = 'alerta';
                    stylehead = "background: #E81F00";
                    stylebody = "background: #E81F00";
                } else {
                    if (temperatura >= tempMax || temperatura <= tempMin) {
                        mensajeAlerta = (temperatura <= tempMin) ? ": esta en umbral de tolerancia baja" : ": esta en umbral de tolerancia alta";
                        mostrarMensajeEmergente("warning", dispositivo, mensajeAlerta);
                        stylehead = "background: #FCEF00;";
                        stylebody = "background: #FCEF00;";
                    }
                }
            }
            if (tipoMedida == "Temperatura" || tipoMedida == "Temp ambiente"){
                TipoM = "°C";
            }else if (tipoMedida == "Humedad"){
                TipoM = "%H";
            }
            contentBody = $('<div class="col-md-3 col-sm-6 col-xs-12"><div class="panel panel-warning hover-3" style="border: none;"><div class="panel-heading" style="background-color: #373f4c; border-color: #ffffff;"><div class="price-value" style="' + stylehead + '"><p><span>' + temperatura + '</span></p></div><div class="price-period" style=""><p id="letra">' + TipoM + '</p></div></div><div class="panel-body" style="' + stylebody + '"><h3><i id="iconodisp" class="lnr lnr-laptop-phone"></i>' + dispositivo + '</h3><ul class="list-unstyled"><li><p class="pull-left" style="color: #ffffff">' + tipoMedida + '</p></li></ul></div><div class="panel-footer" style="background-color: #373f4c; border-color: #ffffff;"><a id="btngrafica2" class="btn btn-primary verGrafica" data-id="' + idDispositivo + '" data-nombre="' + dispositivo + '" href="#"><i class="lnr lnr-chart-bars"></i></a> <a id="btngrafica" class="btn btn-primary verGrafica" data-id="' + idDispositivo + '" data-nombre="' + dispositivo + '" href="#"><i class="lnr lnr-chart-bars"></i> Grafica</a> ' + btnumbral + '</div></div></div>');
            var contenedorSeparador = $('<div class="clearfix" />');
            contentBody.append();
            return contentBody;
        }

        //funcion que muestra los mensajes
        function mostrarMensajeEmergente(tipoMensaje, idDispositivo, mensajeMostrar) {
            //toastr[tipoMensaje](idDispositivo + mensajeMostrar);
            var position = "toast-top-right";
            if ($(window).width() < WIDTH_CHANGE_TOASTR) {
                position = "toast-bottom-full-width";
            }
            toastr.options = {
                "closeButton": true,
                "showDuration": "2000",
                "hideDuration": "2000",
                "timeOut": "2000",
                "extendedTimeOut": "2000",
                "preventDuplicates": true,
                "positionClass": position
            }
            mensajesWarningTotal += idDispositivo + mensajeMostrar + "<br/>";
        }

        // funcion que permite renderizar grafica por hora
        function renderizarGraficaPorDispositivo(horasList, temperaturasList, umbralesSuperioresList,
                                            umbralesInferioresList, toleranciaInferiorList, toleranciaSuperiorList) {


            // mostrar canvas de grafia
            $("#graficaMedidas").show();

            //obtengo objeto grafico
            var canvas = document.getElementById("graficaMedidas");
            var ctx = canvas.getContext("2d");

            //renderizacion de lineas de umbrales
            var horizonalLinePlugin = {
                afterDraw: function (chartInstance) {
                    var yScale = chartInstance.scales["y-axis-0"];
                    var canvas = chartInstance.chart;
                    var ctx = canvas.ctx;
                    var index;
                    var line;
                    var style;

                    if (chartInstance.options.horizontalLine) {
                        for (index = 0; index < chartInstance.options.horizontalLine.length; index++) {
                            line = chartInstance.options.horizontalLine[index];

                            if (!line.style) {
                                style = "rgba(169,169,169, .6)";
                            } else {
                                style = line.style;
                            }

                            if (line.y) {
                                yValue = yScale.getPixelForValue(line.y);
                            } else {
                                yValue = 0;
                            }

                            ctx.lineWidth = 3;

                            if (yValue) {
                                ctx.beginPath();
                                ctx.moveTo(0, yValue);
                                ctx.lineTo(canvas.width, yValue);
                                ctx.strokeStyle = style;
                                ctx.stroke();
                            }

                            if (line.text) {
                                ctx.fillStyle = style;
                                ctx.fillText(line.text, 0, yValue + ctx.lineWidth);
                            }
                        }
                        return;
                    };
                }
            };

            Chart.pluginService.register(horizonalLinePlugin);
            //datos por defecto que muestra la grafica
            var data = {
                labels: horasList,
                datasets: [
                            {
                                label: "Temperatura",
                                borderColor: "rgba(75,192,192,1)",
                                data: temperaturasList,
                                spanGaps: true,
                            },
                            {
                                label: "Tolerancia Máxima",
                                lineTension: 0.1,
                                borderColor: "#ff0000",
                                borderDashOffset: 0.0,
                                pointBorderWidth: 0,
                                pointHoverRadius: 0,
                                pointHoverBorderWidth: 0,
                                pointRadius: 0,
                                pointHitRadius: 0,
                                backgroundColor: "rgba(0,0,0,0)",
                                data: toleranciaSuperiorList,
                            },
                            {

                                label: "Tolerancia Mínima",
                                fill: false,
                                lineTension: 0.1,
                                borderColor: "#ff0000",
                                borderDashOffset: 0.0,
                                pointBorderWidth: 0,
                                pointHoverRadius: 0,
                                pointHoverBorderWidth: 0,
                                pointRadius: 0,
                                pointHitRadius: 0,
                                backgroundColor: "rgba(0,0,0,0)",
                                data: toleranciaInferiorList,
                            },
                             {
                                 label: "Temperatura Máxima",
                                 lineTension: 0.1,
                                 borderColor: "#000000",
                                 borderDashOffset: 0.0,
                                 pointBorderWidth: 0,
                                 pointHoverRadius: 0,
                                 pointHoverBorderWidth: 0,
                                 pointRadius: 0,
                                 pointHitRadius: 0,
                                 backgroundColor: "rgba(0,0,0,0)",
                                 data: umbralesSuperioresList,
                             },
                            {
                                label: "Temperatura Mínima",
                                lineTension: 0.1,
                                borderColor: "#000000",
                                borderDashOffset: 0.0,
                                pointBorderWidth: 0,
                                pointHoverRadius: 0,
                                pointHoverBorderWidth: 0,
                                pointRadius: 0,
                                pointHitRadius: 0,
                                backgroundColor: "rgba(0,0,0,0)",
                                data: umbralesInferioresList,
                            }
                ]
            };
            //limites a renderizar sobresalientes
            var tolMaxima = toleranciaSuperiorList[0] !== undefined ? toleranciaSuperiorList[0] : 0;
            var tolMinima = toleranciaInferiorList[0] !== undefined ? toleranciaInferiorList[0] : 0;
            //configuracion de labels
            var myChart = new Chart(ctx, {
                type: 'line',
                data: data,
                options: {
                    "horizontalLine":
                        [
                            {
                                "y": tolMaxima,
                                "style": "#ff0000",
                                "text": "Tol Max : " + tolMaxima
                            },
                            {
                                "y": tolMinima,
                                "style": "#ff0000",
                                "text": "Tol Min : " + tolMinima
                            },
                        ],
                    scales: {
                        xAxes: [{
                            display: true,
                            scaleLabel: {
                                display: true,
                                labelString: 'Horas'
                            }
                        }],
                        yAxes: [{
                            scaleLabel: {
                                display: true,
                                labelString: 'Temperatura'
                            }
                        }]
                    }
                }
            });

        }

        // funcion que permite obtener datos
        function ObtenerMedidasPorDispositivo(idDispositivo, nombreDispositivo) {

            //mostrar preload, popup, cambiar titulo del popup
            $("#contenedorPreloadGrafico").show();
            $('.modal').modal('show');
            $('.modal-dialog').css('width', '50%');
            $('.modal-title').html(TITULO_POPPUP.replace("#", nombreDispositivo));
            //ocultar grafica, ocultar mensaje de error
            $("#graficaMedidas").hide();
            $('#contentMensajeGrafica').html('');

            $.ajax({
                url: '@Url.Action("ObtenerMedidasPasadas", "Dashboard" )',
                type: 'POST',
                data: JSON.stringify({ idDispositivo: idDispositivo }),
                datatype: 'application/json',
                contentType: 'application/json',
                cache: false,
                success: function (msg) {
                    $("#contenedorPreloadGrafico").hide();

                    if (msg.horasList.length > 0) {
                        renderizarGraficaPorDispositivo(msg.horasList, msg.temperaturaList,
                                                      msg.umbralSuperiorList, msg.umbralInferiorList,
                                                      msg.toleranciaInferiorList, msg.toleranciaSuperiorList);
                    } else {
                        $('#contentMensajeGrafica').html(MENSAJE_SIN_MEDIDAS);
                    }

                },
                error: function (xhr, error) {
                    $("#contenedorPreloadGrafico").hide();
                    $('#modal').modal('hide');
                    Command: toastr["error"]('Ha ocurrido un error al obtener datos de dispositivo', 'ERROR');
                },
            });

        }
</script>

@section scripts{
    <script src="~/Scripts/jquery.signalR-2.2.1.js"></script>
    <script src="~/SignalR/hubs"></script>
    <script>
        function mensaje() {
            $('[data-toggle="tooltip"]').tooltip();
        }
    </script>
    <script src="~/Scripts/Chart.bundle.min.js" type="text/javascript"></script>
}

